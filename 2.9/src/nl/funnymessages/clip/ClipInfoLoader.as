///////////////////////////////////////////////////////////
//  ClipInfoLoader.as
//  Macromedia ActionScript Implementation of the Class ClipInfoLoader
//  Generated by Enterprise Architect
//  Created on:      18-okt-2010 13:03:59
//  Original author: Wouter Tengeler
///////////////////////////////////////////////////////////

package nl.funnymessages.clip
{
	import flash.net.URLVariables;
	
	import nl.funnymessages.clipplayer.ClipPlayer;
	import nl.themotionstudio.net.JsonServerRequest;
	import nl.themotionstudio.events.CustomEvent;
	
	import nl.themotionstudio.utils.Debug;
	
	/**
	 * @author Wouter Tengeler
	 * @version 1.0
	 * @created 18-okt-2010 13:03:59
	 */
	public class ClipInfoLoader extends JsonServerRequest
	{
		//private static const INFO_URL:String = 'clip/info';
		
		private var m_sKey:String;
		private var m_sMode:String;
		
	    /**
		 * 
		 * @param p_sKey
		 * @param String p_sMode play mode 
		 */
	    public function ClipInfoLoader(p_sKey:String, p_sMode:String): void
	    {
			Debug.addClass('ClipInfoLoader');
			Debug.traceInfo('ClipInfoLoader', 'constructor');
			m_sMode = p_sMode;
			m_sKey = p_sKey;
			var sController:String = 'mailing';
			if (m_sMode == ClipPlayer.PLAYMODE_VIEW) {
				// just show the clip with default overlays
				sController = 'clip';
			}
			super(sController, 'info');
	    }
		
		/**
		 * make sure a property key is send with the request
		 * @param URLVariables p_oParams
		 */
		override public function doRequest(p_oParams:URLVariables = null):void {
			if (null == p_oParams) {
				p_oParams = new URLVariables();
			}
			p_oParams.key = m_sKey;
			super.doRequest(p_oParams);
		}
		
		/**
		 * returns the parsed Json string as an object
		 */
		public function get data():Object {
			return m_oParsedJson.data;
		}
		
		override protected function handleResult(p_sData:String):void {
			super.handleResult(p_sData);
			for (var sProperty in m_oParsedJson) {
				Debug.traceInfo('ClipInfoLoader', 'handleResult', sProperty, m_oParsedJson[sProperty]);
			}
		}
	}//end ClipInfoLoader

}